{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/forms\";\nconst _c0 = () => [\"/dashboard\"];\nconst _c1 = () => [\"/authentication/login\"];\nfunction AppSideRegisterComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppSideRegisterComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppSideRegisterComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must include at least one uppercase letter, one lowercase letter, one number, and one special character. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppSideRegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.form = new FormGroup({\n      firstname: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      lastname: new FormControl('', [Validators.required, Validators.minLength(2)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  submit() {\n    if (this.form.valid) {\n      const registerData = {\n        firstname: this.form.get('firstname')?.value,\n        lastname: this.form.get('lastname')?.value,\n        email: this.form.get('email')?.value,\n        password: this.form.get('password')?.value\n      };\n      this.authService.register(registerData).subscribe(response => {\n        console.log('Registration successful:', response);\n        this.router.navigate(['/authentication/login']);\n      }, error => {\n        console.error('Registration failed:', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AppSideRegisterComponent_Factory(t) {\n      return new (t || AppSideRegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthserviceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppSideRegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 34,\n      vars: 8,\n      consts: [[1, \"blank-layout-container\", \"justify-content-center\", \"align-items-center\", \"bg-light-primary\"], [1, \"position-relative\", \"row\", \"w-100\", \"h-100\", \"bg-gredient\", \"justify-content-center\"], [1, \"col-lg-4\", \"d-flex\", \"align-items-center\"], [1, \"cardWithShadow\", \"boxed-auth\"], [1, \"p-32\"], [1, \"text-center\"], [3, \"routerLink\"], [\"src\", \"./assets/images/logos/logos.svg\", \"alt\", \"logo\", 1, \"align-middle\", \"m-2\"], [1, \"m-t-30\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mat-subtitle-2\", \"f-s-14\", \"f-w-600\", \"m-b-12\", \"d-block\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"matInput\", \"\", \"formControlName\", \"firstname\"], [\"matInput\", \"\", \"formControlName\", \"lastname\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-100\"], [1, \"d-block\", \"f-w-500\", \"text-center\", \"m-t-24\"], [1, \"text-decoration-none\", \"text-primary\", \"f-w-500\", \"f-s-14\", 3, \"routerLink\"]],\n      template: function AppSideRegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-content\", 4)(5, \"div\", 5)(6, \"a\", 6);\n          i0.ɵɵelement(7, \"img\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function AppSideRegisterComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(9, \"mat-label\", 9);\n          i0.ɵɵtext(10, \"First name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 10);\n          i0.ɵɵelement(12, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-label\", 9);\n          i0.ɵɵtext(14, \"Last name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"mat-form-field\", 10);\n          i0.ɵɵelement(16, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-label\", 9);\n          i0.ɵɵtext(18, \"Email Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-form-field\", 10);\n          i0.ɵɵelement(20, \"input\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"mat-label\", 9);\n          i0.ɵɵtext(22, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"mat-form-field\", 10);\n          i0.ɵɵelement(24, \"input\", 14);\n          i0.ɵɵtemplate(25, AppSideRegisterComponent_mat_error_25_Template, 2, 0, \"mat-error\", 15)(26, AppSideRegisterComponent_mat_error_26_Template, 2, 0, \"mat-error\", 15)(27, AppSideRegisterComponent_mat_error_27_Template, 2, 0, \"mat-error\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 16);\n          i0.ɵɵtext(29, \" Sign Up \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"span\", 17);\n          i0.ɵɵtext(31, \" Already have an Account? \");\n          i0.ɵɵelementStart(32, \"a\", 18);\n          i0.ɵɵtext(33, \"Sign In\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngIf\", ctx.f.password.errors == null ? null : ctx.f.password.errors[\"required\"]);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.f.password.errors == null ? null : ctx.f.password.errors[\"minlength\"]);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.f.password.errors == null ? null : ctx.f.password.errors[\"passwordStrength\"]);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c1));\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink, i4.MatCard, i4.MatCardContent, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i7.MatButton, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.FormGroupDirective, i8.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppSideRegisterComponent","constructor","authService","router","form","firstname","required","minLength","lastname","email","password","f","controls","submit","valid","registerData","get","value","register","subscribe","response","console","log","navigate","error","ɵɵdirectiveInject","i1","AuthserviceService","i2","Router","selectors","decls","vars","consts","template","AppSideRegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AppSideRegisterComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","AppSideRegisterComponent_mat_error_25_Template","AppSideRegisterComponent_mat_error_26_Template","AppSideRegisterComponent_mat_error_27_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","errors","_c1"],"sources":["/home/layth/Desktop/front/front/src/app/pages/authentication/register/register.component.ts","/home/layth/Desktop/front/front/src/app/pages/authentication/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthserviceService } from '../authservice.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n})\nexport class AppSideRegisterComponent {\n  form = new FormGroup({\n    firstname: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    lastname: new FormControl('', [Validators.required, Validators.minLength(2)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(private authService: AuthserviceService, private router: Router) {}\n\n  get f() {\n    return this.form.controls;\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const registerData = {\n        firstname: this.form.get('firstname')?.value,\n        lastname: this.form.get('lastname')?.value,\n        email: this.form.get('email')?.value,\n        password: this.form.get('password')?.value,\n      };\n\n      this.authService.register(registerData).subscribe(\n        response => {\n          console.log('Registration successful:', response);\n          this.router.navigate(['/authentication/login']);\n        },\n        error => {\n          console.error('Registration failed:', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"blank-layout-container justify-content-center align-items-center bg-light-primary\">\n  <div class=\"position-relative row w-100 h-100 bg-gredient justify-content-center\">\n    <div class=\"col-lg-4 d-flex align-items-center\">\n      <mat-card class=\"cardWithShadow boxed-auth\">\n        <mat-card-content class=\"p-32\">\n          <div class=\"text-center\">\n            <a [routerLink]=\"['/dashboard']\">\n              <img src=\"./assets/images/logos/logos.svg\" class=\"align-middle m-2\" alt=\"logo\" />\n            </a>\n          </div>\n\n          <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"m-t-30\">\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">First name</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput formControlName=\"firstname\" />\n            </mat-form-field>\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">Last name</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput formControlName=\"lastname\" />\n            </mat-form-field>\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">Email Address</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput type=\"email\" formControlName=\"email\" />\n            </mat-form-field>\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">Password</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput type=\"password\" formControlName=\"password\" />\n              <mat-error *ngIf=\"f.password.errors?.['required']\">Password is required.</mat-error>\n              <mat-error *ngIf=\"f.password.errors?.['minlength']\">Password must be at least 8 characters long.</mat-error>\n              <mat-error *ngIf=\"f.password.errors?.['passwordStrength']\">\n                Password must include at least one uppercase letter, one lowercase letter, one number, and one special character.\n              </mat-error>\n            </mat-form-field>\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\">\n              Sign Up\n            </button>\n          </form>\n          \n          <span class=\"d-block f-w-500 text-center m-t-24\">\n            Already have an Account?\n            <a [routerLink]=\"['/authentication/login']\" class=\"text-decoration-none text-primary f-w-500 f-s-14\">Sign In</a>\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}