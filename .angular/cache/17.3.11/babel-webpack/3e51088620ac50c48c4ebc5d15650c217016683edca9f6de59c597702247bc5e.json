{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/badge\";\nimport * as i4 from \"@angular/material/icon\";\nexport class AppBadgeComponent {\n  constructor() {\n    this.hidden = false;\n  }\n  ngOnInit() {}\n  toggleBadgeVisibility() {\n    this.hidden = !this.hidden;\n  }\n  static {\n    this.ɵfac = function AppBadgeComponent_Factory(t) {\n      return new (t || AppBadgeComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppBadgeComponent,\n      selectors: [[\"app-badge\"]],\n      decls: 33,\n      vars: 1,\n      consts: [[1, \"cardWithShadow\", \"theme-card\"], [1, \"m-b-0\"], [1, \"b-t-1\"], [1, \"b-1\", \"shadow-none\"], [\"matBadge\", \"4\", \"matBadgeOverlap\", \"false\", 1, \"f-w-500\", \"text-muted\"], [\"matBadge\", \"4\", \"matBadgeOverlap\", \"false\", \"matBadgeSize\", \"large\", 1, \"f-w-500\", \"text-muted\"], [1, \"f-w-500\", \"text-muted\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"matBadge\", \"8\", \"matBadgePosition\", \"before\", \"matBadgeColor\", \"accent\"], [\"matBadge\", \"15\", \"matBadgeColor\", \"warn\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"matBadge\", \"7\", 3, \"click\", \"matBadgeHidden\"]],\n      template: function AppBadgeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\", 1);\n          i0.ɵɵtext(3, \"Badges\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"mat-card-content\", 2)(5, \"mat-card\", 3)(6, \"mat-card-content\")(7, \"p\")(8, \"span\", 4);\n          i0.ɵɵtext(9, \"Text with a badge\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(10, \"mat-card\", 3)(11, \"mat-card-content\")(12, \"p\")(13, \"span\", 5);\n          i0.ɵɵtext(14, \"Text with large badge\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"mat-card\", 3)(16, \"mat-card-content\")(17, \"p\", 6);\n          i0.ɵɵtext(18, \" Button with a badge on the left \");\n          i0.ɵɵelementStart(19, \"button\", 7);\n          i0.ɵɵtext(20, \" Action \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(21, \"mat-card\", 3)(22, \"mat-card-content\")(23, \"p\", 6);\n          i0.ɵɵtext(24, \" Icon with a badge \");\n          i0.ɵɵelementStart(25, \"mat-icon\", 8);\n          i0.ɵɵtext(26, \"home\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(27, \"mat-card\", 3)(28, \"mat-card-content\")(29, \"p\");\n          i0.ɵɵtext(30, \" Button toggles badge visibility \");\n          i0.ɵɵelementStart(31, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function AppBadgeComponent_Template_button_click_31_listener() {\n            return ctx.toggleBadgeVisibility();\n          });\n          i0.ɵɵtext(32, \" Hide \");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(31);\n          i0.ɵɵproperty(\"matBadgeHidden\", ctx.hidden);\n        }\n      },\n      dependencies: [i1.MatCard, i1.MatCardContent, i1.MatCardHeader, i1.MatCardTitle, i2.MatButton, i3.MatBadge, i4.MatIcon],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["AppBadgeComponent","constructor","hidden","ngOnInit","toggleBadgeVisibility","selectors","decls","vars","consts","template","AppBadgeComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppBadgeComponent_Template_button_click_31_listener","ɵɵadvance","ɵɵproperty"],"sources":["/home/layth/Desktop/front/front/src/app/pages/ui-components/badge/badge.component.ts","/home/layth/Desktop/front/front/src/app/pages/ui-components/badge/badge.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './badge.component.html'\n})\nexport class AppBadgeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hidden = false;\n\n  toggleBadgeVisibility() {\n    this.hidden = !this.hidden;\n  }\n\n}\n","<mat-card class=\"cardWithShadow theme-card\">\n  <mat-card-header>\n    <mat-card-title class=\"m-b-0\">Badges</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"b-t-1\">\n    <mat-card class=\"b-1 shadow-none\">\n      <mat-card-content>\n        <p>\n          <span matBadge=\"4\" matBadgeOverlap=\"false\" class=\"f-w-500 text-muted\">Text with a badge</span>\n        </p>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"b-1 shadow-none\">\n      <mat-card-content>\n        <p>\n          <span matBadge=\"4\" matBadgeOverlap=\"false\" matBadgeSize=\"large\" class=\"f-w-500 text-muted\">Text with large\n            badge</span>\n        </p>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"b-1 shadow-none\">\n      <mat-card-content>\n        <p class=\"f-w-500 text-muted\">\n          Button with a badge on the left\n          <button mat-flat-button color=\"primary\" matBadge=\"8\" matBadgePosition=\"before\" matBadgeColor=\"accent\">\n            Action\n          </button>\n        </p>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"b-1 shadow-none\">\n      <mat-card-content>\n        <p class=\"f-w-500 text-muted\">\n          Icon with a badge\n          <mat-icon matBadge=\"15\" matBadgeColor=\"warn\">home</mat-icon>\n        </p>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"b-1 shadow-none\">\n      <mat-card-content>\n        <p>\n          Button toggles badge visibility\n          <button mat-flat-button color=\"primary\" matBadge=\"7\" [matBadgeHidden]=\"hidden\" (click)=\"toggleBadgeVisibility()\">\n            Hide\n          </button>\n        </p>\n      </mat-card-content>\n    </mat-card>\n\n\n\n  </mat-card-content>\n</mat-card>"],"mappings":";;;;;AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAA;IAKA,KAAAC,MAAM,GAAG,KAAK;EALE;EAEhBC,QAAQA,CAAA,GACR;EAIAC,qBAAqBA,CAAA;IACnB,IAAI,CAACF,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC5B;;;uBAXWF,iBAAiB;IAAA;EAAA;;;YAAjBA,iBAAiB;MAAAK,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCJ1BE,EAFJ,CAAAC,cAAA,kBAA4C,sBACzB,wBACe;UAAAD,EAAA,CAAAE,MAAA,aAAM;UACtCF,EADsC,CAAAG,YAAA,EAAiB,EACrC;UAKVH,EAJR,CAAAC,cAAA,0BAAgC,kBACI,uBACd,QACb,cACqE;UAAAD,EAAA,CAAAE,MAAA,wBAAiB;UAG7FF,EAH6F,CAAAG,YAAA,EAAO,EAC5F,EACa,EACV;UAKLH,EAHN,CAAAC,cAAA,mBAAkC,wBACd,SACb,eAC0F;UAAAD,EAAA,CAAAE,MAAA,6BACpF;UAGbF,EAHa,CAAAG,YAAA,EAAO,EACZ,EACa,EACV;UAIPH,EAFJ,CAAAC,cAAA,mBAAkC,wBACd,YACc;UAC5BD,EAAA,CAAAE,MAAA,yCACA;UAAAF,EAAA,CAAAC,cAAA,iBAAsG;UACpGD,EAAA,CAAAE,MAAA,gBACF;UAGNF,EAHM,CAAAG,YAAA,EAAS,EACP,EACa,EACV;UAIPH,EAFJ,CAAAC,cAAA,mBAAkC,wBACd,YACc;UAC5BD,EAAA,CAAAE,MAAA,2BACA;UAAAF,EAAA,CAAAC,cAAA,mBAA6C;UAAAD,EAAA,CAAAE,MAAA,YAAI;UAGvDF,EAHuD,CAAAG,YAAA,EAAW,EAC1D,EACa,EACV;UAIPH,EAFJ,CAAAC,cAAA,mBAAkC,wBACd,SACb;UACDD,EAAA,CAAAE,MAAA,yCACA;UAAAF,EAAA,CAAAC,cAAA,iBAAiH;UAAlCD,EAAA,CAAAI,UAAA,mBAAAC,oDAAA;YAAA,OAASN,GAAA,CAAAR,qBAAA,EAAuB;UAAA,EAAC;UAC9GS,EAAA,CAAAE,MAAA,cACF;UAQVF,EARU,CAAAG,YAAA,EAAS,EACP,EACa,EACV,EAIM,EACV;;;UAVoDH,EAAA,CAAAM,SAAA,IAAyB;UAAzBN,EAAA,CAAAO,UAAA,mBAAAR,GAAA,CAAAV,MAAA,CAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}