{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/orders';\n  }\n  getAllOrders() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(this.apiUrl, {\n      headers\n    });\n  }\n  getOrderById(id) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers\n    });\n  }\n  updateOrderStatus(id, status) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    const url = `${this.apiUrl}/${id}/status?status=${status}`;\n    return this.http.put(url, null, {\n      headers\n    });\n  }\n  static {\n    this.ɵfac = function OrderService_Factory(t) {\n      return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrderService,\n      factory: OrderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","OrderService","constructor","http","apiUrl","getAllOrders","token","localStorage","getItem","headers","get","getOrderById","id","updateOrderStatus","status","url","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/layth/Desktop/front/front/src/app/pages/orderadmins/orderadmins.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Order } from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private apiUrl = 'http://localhost:8080/api/orders'; \n  \n  constructor(private http: HttpClient) { }\n \n  getAllOrders(): Observable<Order[]> {\n    const token = localStorage.getItem('token'); \n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` \n    });\n\n    return this.http.get<Order[]>(this.apiUrl, { headers });\n  }\n\n  getOrderById(id: number): Observable<Order> {\n    const token = localStorage.getItem('token'); \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    return this.http.get<Order>(`${this.apiUrl}/${id}`, { headers });\n  }\n\n  updateOrderStatus(id: number, status: string): Observable<Order> {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  \n    const url = `${this.apiUrl}/${id}/status?status=${status}`;\n  \n    return this.http.put<Order>(url, null, { headers });\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEX;EAExCC,YAAYA,CAAA;IACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUM,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAU,IAAI,CAACN,MAAM,EAAE;MAAEK;IAAO,CAAE,CAAC;EACzD;EAEAE,YAAYA,CAACC,EAAU;IACrB,MAAMN,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUM,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,MAAM,IAAIQ,EAAE,EAAE,EAAE;MAAEH;IAAO,CAAE,CAAC;EAClE;EAEAI,iBAAiBA,CAACD,EAAU,EAAEE,MAAc;IAC1C,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUM,KAAK;KACjC,CAAC;IAEF,MAAMS,GAAG,GAAG,GAAG,IAAI,CAACX,MAAM,IAAIQ,EAAE,kBAAkBE,MAAM,EAAE;IAE1D,OAAO,IAAI,CAACX,IAAI,CAACa,GAAG,CAAQD,GAAG,EAAE,IAAI,EAAE;MAAEN;IAAO,CAAE,CAAC;EACrD;;;uBAlCWR,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZnB,YAAY;MAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}