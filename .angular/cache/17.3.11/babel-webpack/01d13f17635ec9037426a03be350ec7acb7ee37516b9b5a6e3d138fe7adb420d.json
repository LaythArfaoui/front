{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { jwtDecode } from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/checkbox\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/forms\";\nconst _c0 = () => [\"/dashboard\"];\nconst _c1 = () => [\"/\"];\nconst _c2 = () => [\"/authentication/register\"];\nexport class AppSideLoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  submit() {\n    if (this.form.valid) {\n      const loginData = {\n        email: this.form.get('email')?.value,\n        password: this.form.get('password')?.value\n      };\n      this.authService.authenticate(loginData).subscribe(response => {\n        console.log('Login successful:', response);\n        const token = response.body?.token;\n        if (token) {\n          localStorage.setItem('token', token);\n          const decodedToken = jwtDecode(token);\n          const role = decodedToken.role;\n          localStorage.setItem('role', role);\n          // Redirect based on role\n          if (role === 'ADMIN') {\n            this.router.navigate(['/orderadmins']); // Admin sees orders and products\n          } else if (role === 'USER') {\n            this.router.navigate(['/menu']); // User sees menu and orders\n          } else {\n            console.error('Unknown role:', role);\n          }\n          console.log('User role and token stored in localStorage');\n        } else {\n          console.error('Token is missing in the response');\n        }\n      }, error => {\n        console.error('Login failed:', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AppSideLoginComponent_Factory(t) {\n      return new (t || AppSideLoginComponent)(i0.ɵɵdirectiveInject(i1.AuthserviceService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppSideLoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 28,\n      vars: 7,\n      consts: [[1, \"blank-layout-container\", \"justify-content-center\", \"align-items-center\", \"bg-light-primary\"], [1, \"position-relative\", \"row\", \"w-100\", \"h-100\", \"bg-gredient\", \"justify-content-center\"], [1, \"col-lg-4\", \"d-flex\", \"align-items-center\"], [1, \"cardWithShadow\", \"boxed-auth\"], [1, \"p-32\"], [1, \"text-center\"], [3, \"routerLink\"], [\"src\", \"./assets/images/logos/logos.svg\", \"alt\", \"logo\", 1, \"align-middle\", \"m-2\"], [1, \"m-t-30\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mat-subtitle-2\", \"f-s-14\", \"f-w-600\", \"m-b-12\", \"d-block\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [1, \"d-flex\", \"align-items-center\", \"m-b-12\"], [\"color\", \"primary\"], [1, \"text-primary\", \"f-w-600\", \"text-decoration-none\", \"m-l-auto\", \"f-s-14\", 3, \"routerLink\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"w-100\"], [1, \"d-block\", \"f-w-500\", \"text-center\", \"m-t-24\"], [1, \"text-decoration-none\", \"text-primary\", \"f-w-500\", \"f-s-14\", 3, \"routerLink\"]],\n      template: function AppSideLoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-content\", 4)(5, \"div\", 5)(6, \"a\", 6);\n          i0.ɵɵelement(7, \"img\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function AppSideLoginComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(9, \"mat-label\", 9);\n          i0.ɵɵtext(10, \"Email Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 10);\n          i0.ɵɵelement(12, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-label\", 9);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"mat-form-field\", 10);\n          i0.ɵɵelement(16, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 13)(18, \"mat-checkbox\", 14);\n          i0.ɵɵtext(19, \"Remember this Device\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"a\", 15);\n          i0.ɵɵtext(21, \"Forgot Password ?\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"button\", 16);\n          i0.ɵɵtext(23, \" Sign In \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"span\", 17);\n          i0.ɵɵtext(25, \" New to AVAX RESTO? \");\n          i0.ɵɵelementStart(26, \"a\", 18);\n          i0.ɵɵtext(27, \" Create an account\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c1));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c2));\n        }\n      },\n      dependencies: [i2.RouterLink, i3.MatCard, i3.MatCardContent, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.MatCheckbox, i7.MatButton, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.FormGroupDirective, i8.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","jwtDecode","AppSideLoginComponent","constructor","authService","router","form","email","required","password","f","controls","submit","valid","loginData","get","value","authenticate","subscribe","response","console","log","token","body","localStorage","setItem","decodedToken","role","navigate","error","i0","ɵɵdirectiveInject","i1","AuthserviceService","i2","Router","selectors","decls","vars","consts","template","AppSideLoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","AppSideLoginComponent_Template_form_ngSubmit_8_listener","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2"],"sources":["/home/layth/Desktop/front/front/src/app/pages/authentication/login/login.component.ts","/home/layth/Desktop/front/front/src/app/pages/authentication/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthserviceService } from '../authservice.service';\nimport { jwtDecode } from 'jwt-decode';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class AppSideLoginComponent {\n  form: FormGroup;\n\n  constructor(private authService: AuthserviceService, private router: Router) {\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const loginData = {\n        email: this.form.get('email')?.value,\n        password: this.form.get('password')?.value,\n      };\n\n      this.authService.authenticate(loginData).subscribe(\n        response => {\n          console.log('Login successful:', response);\n          const token = response.body?.token;\n          if (token) {\n            localStorage.setItem('token', token);\n            const decodedToken: any = jwtDecode(token);\n            const role = decodedToken.role;\n            localStorage.setItem('role', role);\n\n            // Redirect based on role\n            if (role === 'ADMIN') {\n              this.router.navigate(['/orderadmins']); // Admin sees orders and products\n            } else if (role === 'USER') {\n              this.router.navigate(['/menu']); // User sees menu and orders\n            } else {\n              console.error('Unknown role:', role);\n            }\n            console.log('User role and token stored in localStorage');\n          } else {\n            console.error('Token is missing in the response');\n          }\n        },\n        error => {\n          console.error('Login failed:', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"blank-layout-container justify-content-center align-items-center bg-light-primary\">\n  <div class=\"position-relative row w-100 h-100 bg-gredient justify-content-center\">\n    <div class=\"col-lg-4 d-flex align-items-center\">\n      <mat-card class=\"cardWithShadow boxed-auth\">\n        <mat-card-content class=\"p-32\">\n          <div class=\"text-center\">\n            <a [routerLink]=\"['/dashboard']\">\n              <img\n                src=\"./assets/images/logos/logos.svg\"\n                class=\"align-middle m-2\"\n                alt=\"logo\"\n              />\n            </a>\n          </div>\n\n          <form class=\"m-t-30\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">Email Address</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput formControlName=\"email\" type=\"email\" />\n            </mat-form-field>\n         \n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\">Password</mat-label>\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\n              <input matInput type=\"password\" formControlName=\"password\" />\n            </mat-form-field>\n\n            <div class=\"d-flex align-items-center m-b-12\">\n              <mat-checkbox color=\"primary\">Remember this Device</mat-checkbox>\n              <a\n                [routerLink]=\"['/']\"\n                class=\"text-primary f-w-600 text-decoration-none m-l-auto f-s-14\"\n                >Forgot Password ?</a\n              >\n            </div>\n            <button mat-flat-button color=\"primary\" class=\"w-100\" type=\"submit\">\n              Sign In\n            </button>\n          </form>\n          <span class=\"d-block f-w-500 text-center m-t-24\">\n            New to AVAX RESTO?\n            <a\n              [routerLink]=\"['/authentication/register']\"\n              class=\"text-decoration-none text-primary f-w-500 f-s-14\"\n            >\n              Create an account</a\n            >\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}